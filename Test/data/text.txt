app.py:
from flask import Flask, render_template, request, redirect, url_for, flash, session, send_file
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from datetime import datetime, timedelta
import os
import random
import string
import qrcode
from functools import wraps

app = Flask(__name__)
app.config.from_object('config.Config')
db = SQLAlchemy(app)
bcrypt = Bcrypt(app)


# 用户模型
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(150), nullable=False, unique=True)
    password = db.Column(db.String(150), nullable=False)
    expiration_date = db.Column(db.DateTime, nullable=True)
    subscription_link = db.Column(db.String(200), nullable=True, unique=True)

    def __repr__(self):
        return f"<User {self.username}>"


# 用户登录验证装饰器
def user_login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_logged_in' not in session:
            flash("请先登录", "danger")
            return redirect(url_for('user_login'))
        return f(*args, **kwargs)

    return decorated_function


# 管理员登录验证装饰器
def admin_login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'admin_logged_in' not in session:
            flash("请先登录", "danger")
            return redirect(url_for('login'))
        return f(*args, **kwargs)

    return decorated_function


@app.route('/admin', methods=['GET', 'POST'])
@admin_login_required
def admin():
    if request.method == 'POST':
        if 'username' in request.form and 'password' in request.form:
            hashed_password = bcrypt.generate_password_hash(request.form['password']).decode('utf-8')
            expiration_days = int(request.form.get('expiration_days', 30))
            expiration_date = datetime.now() + timedelta(days=expiration_days)
            subscription_link = generate_subscription_link()

            new_user = User(
                username=request.form['username'],
                password=hashed_password,
                expiration_date=expiration_date,
                subscription_link=subscription_link
            )
            db.session.add(new_user)
            db.session.commit()
            flash('用户已创建', 'success')

        elif 'delete_user' in request.form:
            user = User.query.get(request.form['delete_user'])
            if user:
                db.session.delete(user)
                db.session.commit()
                flash('用户已删除', 'success')

        elif 'extend_expiration' in request.form:
            user = User.query.get(request.form['extend_expiration'])
            additional_days = int(request.form.get('additional_days', 0))
            if user:
                user.expiration_date += timedelta(days=additional_days)
                db.session.commit()
                flash('有效期已更新', 'success')

    users = User.query.all()
    return render_template('admin.html', users=users)


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        if request.form.get('username') == 'admin' and request.form.get('password') == 'admin':
            session['admin_logged_in'] = True
            flash('登录成功', 'success')
            return redirect(url_for('admin'))
        else:
            flash('用户名或密码错误', 'danger')
    return render_template('login.html')


@app.route('/user_login', methods=['GET', 'POST'])
def user_login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username).first()
        if user and bcrypt.check_password_hash(user.password, password):
            if user.expiration_date < datetime.now():
                flash('您的账户已过期，请购买', 'warning')
                return redirect(url_for('purchase'))
            else:
                session['user_logged_in'] = True
                session['user_id'] = user.id
                flash('用户登录成功', 'success')
                return redirect(url_for('subscription'))
        else:
            flash('用户名或密码错误', 'danger')
    return render_template('user_login.html')


@app.route('/logout')
def logout():
    session.pop('admin_logged_in', None)
    session.pop('user_logged_in', None)
    session.pop('user_id', None)
    flash("已退出登录", "info")
    return redirect(url_for('login'))


@app.route('/subscription')
@user_login_required
def subscription():
    user_id = session.get('user_id')
    user = User.query.get(user_id)
    if not user:
        return "用户不存在", 404

    if user.expiration_date < datetime.now():
        flash('您的账户已过期，请购买', 'warning')
        return redirect(url_for('purchase'))

    # 计算剩余天数
    remaining_days = (user.expiration_date - datetime.now()).days

    # 生成用户的专属订阅链接
    subscription_url = url_for('get_subscription_file', subscription_link=user.subscription_link, _external=True)

    # 生成订阅链接二维码
    qr = qrcode.make(subscription_url)
    qr_path = f"static/qrcodes/{user.subscription_link}.png"
    qr.save(qr_path)

    return render_template('subscription.html', user=user, subscription_url=subscription_url,
                           remaining_days=remaining_days, qr_path=qr_path)

@app.route('/purchase', methods=['GET', 'POST'])
def purchase():
    return render_template('purchase.html')

@app.route('/subscription/<subscription_link>.yml')
def get_subscription_file(subscription_link):
    # 验证订阅链接是否有效
    user = User.query.filter_by(subscription_link=subscription_link).first()
    if not user or user.expiration_date < datetime.now():
        return "订阅链接已失效或无效", 404

    # 返回本地的 YAML 文件
    return send_file('iggfeed.yaml', mimetype='application/x-yaml')


def generate_subscription_link():
    return ''.join(random.choices(string.ascii_letters + string.digits, k=10))


if __name__ == '__main__':
    # 创建静态目录用于存储二维码图像
    os.makedirs('static/qrcodes', exist_ok=True)
    db.create_all()
    # app.run(debug=True)
    app.run()

config.py:
import os

class Config:
    SECRET_KEY = os.urandom(24)
    SQLALCHEMY_DATABASE_URI = 'sqlite:///site.db'
    SQLALCHEMY_TRACK_MODIFICATIONS = False

admin.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>管理后台</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='base.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='admin.css') }}">
</head>
<body>
<div class="container">
    <h1>管理后台</h1>

    <!-- 添加用户按钮 -->
    <button id="addUserButton" class="btn">添加用户</button>

    <!-- 添加用户对话框 -->
    <div id="addUserModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>添加新用户</h2>
            <form method="post">
                <label for="username">用户名</label>
                <input type="text" name="username" id="username" required>

                <label for="password">密码</label>
                <input type="password" name="password" id="password" required>

                <label for="expiration_days">有效期天数</label>
                <input type="number" name="expiration_days" id="expiration_days" value="30" required>

                <button type="submit">提交</button>
            </form>
        </div>
    </div>

    <!-- 用户列表 -->
    <h2>用户列表</h2>
    <div class="table-container">
        <table>
            <thead>
            <tr>
                <th>用户名</th>
                <th>订阅链接</th>
                <th>有效期</th>
                <th>操作</th>
            </tr>
            </thead>
            <tbody>
            {% for user in users %}
                <tr>
                    <td>{{ user.username }}</td>
                    <td>{{ user.subscription_link }}</td>
                    <td>{{ user.expiration_date }}</td>
                    <td>
                        <!-- 删除用户表单 -->
                        <form method="post" style="display: inline;">
                            <input type="hidden" name="delete_user" value="{{ user.id }}">
                            <button type="submit">删除</button>
                        </form>

                        <!-- 延长有效期表单 -->
                        <form method="post" style="display: inline;">
                            <input type="hidden" name="extend_expiration" value="{{ user.id }}">
                            <input type="number" name="additional_days" value="0" style="width: 50px;">
                            <button type="submit">延长</button>
                        </form>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>

    <!-- 登出链接 -->
    <a href="{{ url_for('logout') }}" class="logout">退出登录</a>
</div>

<script>
    // 获取对话框元素
    const modal = document.getElementById("addUserModal");
    const addUserButton = document.getElementById("addUserButton");
    const closeModal = document.getElementsByClassName("close")[0];

    // 点击“添加用户”按钮打开对话框
    addUserButton.onclick = function () {
        modal.style.display = "block";
    };

    // 点击“关闭”按钮关闭对话框
    closeModal.onclick = function () {
        modal.style.display = "none";
    };

    // 点击对话框外部关闭对话框
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    };
</script>
</body>
</html>

admin.css:
/* 基础样式 */
body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f7;
    color: #333;
    margin: 0;
    padding: 0;
    overflow-y: scroll; /* 防止内容少时页面抖动 */
}

/* 容器样式 */
.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    position: relative; /* 为了定位内部元素 */
    z-index: 1; /* 确保容器层级较低 */
}

/* 标题样式 */
h1, h2 {
    color: #1d1d1f;
    text-align: center;
}

/* 按钮样式 */
button {
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 10px 20px;
    margin: 10px 0;
    cursor: pointer;
    font-size: 16px;
    border-radius: 4px;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #0056b3;
}

/* 表格容器样式 */
.table-container {
    max-height: 600px; /* 调整此值以适应6行数据的高度 */
    overflow-y: auto;
    margin-top: 20px;
    position: relative;
}

/* 表格样式 */
table {
    width: 100%;
    border-collapse: collapse;
    font-size: 14px;
}

thead th {
    position: sticky;
    top: 0;
    background-color: #f0f0f5;
    z-index: 1;
}

tbody td {
    background-color: #fff;
    color: #48484a;
}

th, td {
    padding: 12px;
    border-bottom: 1px solid #e5e5ea;
    text-align: left;
}

th {
    font-weight: 600;
    color: #1d1d1f;
}

/* 弹窗样式 */
.modal {
    display: none;
    position: fixed;
    z-index: 1000; /* 确保弹窗在最上层 */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* 防止内容过长 */
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
    background-color: #ffffff;
    margin: 10% auto;
    padding: 20px;
    border-radius: 8px;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    animation: fadeIn 0.3s;
    position: relative;
}

/* 关闭按钮样式 */
.close {
    color: #555;
    position: absolute;
    right: 15px;
    top: 10px;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover, .close:focus {
    color: #333;
}

/* 输入框样式 */
input[type="text"],
input[type="password"],
input[type="number"] {
    width: 100%;
    padding: 10px;
    margin: 8px 0;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

/* 登出链接 */
a.logout {
    display: block;
    text-align: center;
    color: #007bff;
    text-decoration: none;
    margin-top: 20px;
    font-weight: bold;
}

a.logout:hover {
    color: #0056b3;
}

/* 防止页面内容少时出现滚动条闪烁 */
html {
    height: 100%;
}

/* 动画效果 */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
login.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>管理员登录</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='base.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='login.css') }}">
</head>
<body>
<div class="container login-container">
    <h1>管理员登录</h1>
    <form method="post" class="login-form">
        <input type="text" name="username" id="username" placeholder="用户名" required>

        <input type="password" name="password" id="password" placeholder="密码" required>

        <button type="submit" class="login-button">登录</button>
    </form>

    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            <div class="flash-messages">
                {% for category, message in messages %}
                    <p>{{ message }}</p>
                {% endfor %}
            </div>
        {% endif %}
    {% endwith %}
</div>
</body>
</html>

user_login.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户登录</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='base.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='login.css') }}">
</head>
<body>
<div class="container login-container">
    <h1>用户登录</h1>
    <form method="post" class="login-form">
        <input type="text" name="username" id="username" placeholder="用户名" required>


        <input type="password" name="password" id="password" placeholder="密码" required>

        <button type="submit" class="login-button">登录</button>
    </form>

    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            <div class="flash-messages">
                {% for category, message in messages %}
                    <p>{{ message }}</p>
                {% endfor %}
            </div>
        {% endif %}
    {% endwith %}
</div>
</body>
</html>

login.css:
/* login.css */
.login-container {
    max-width: 400px;
    padding: 40px;
    text-align: center;
}

.login-form {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-top: 20px;
}

.login-form label {
    text-align: left;
    font-size: 14px;
    color: #6e6e73;
    margin-bottom: 4px;
}

.login-form input[type="text"],
.login-form input[type="password"] {
    width: 100%;
    padding: 12px;
    border: 1px solid #d2d2d7;
    border-radius: 8px;
    font-size: 16px;
    background-color: #f9f9f9;
}

.login-form input[type="text"]::placeholder {
    color: #a1a1a6;
}

.login-form input[type="password"]::placeholder {
    color: #a1a1a6;
}

.login-button {
    padding: 12px;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    color: #fff;
    background: linear-gradient(135deg, #007aff, #0a84ff);
    cursor: pointer;
    transition: background 0.3s ease;
}

.login-button:hover {
    background: linear-gradient(135deg, #0a84ff, #0d88ff);
}

.flash-messages {
    margin-top: 20px;
    padding: 12px;
    background-color: #fffbe2;
    border-left: 4px solid #ffcc00;
    border-radius: 8px;
    color: #4a4a4a;
}

subscription.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>订阅信息</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
    <style>
        /* 优化页面布局的额外样式 */
        .subscription-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 30px;
            background-color: #f9f9f9;
            border-radius: 10px;
            text-align: center;
        }

        .subscription-container h1 {
            margin-bottom: 30px;
            font-size: 2em;
            color: #333;
        }

        .subscription-link {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
            position: relative;
        }

        .subscription-link a {
            word-break: break-all;
            color: #007BFF;
            text-decoration: none;
        }

        .subscription-link a:hover {
            text-decoration: underline;
        }

        .subscription-link button {
            margin-left: 10px;
            padding: 8px 16px;
            font-size: 14px;
            cursor: pointer;
        }

        .remaining-days {
            font-size: 1.2em;
            color: #555;
            margin-bottom: 30px;
        }

        .qr-code img {
            width: 200px;
            height: 200px;
            margin-bottom: 10px; /* 调整间距 */
        }

        .qr-code-label {
            font-size: 1em;
            color: #333;
            margin-bottom: 30px;
        }

        /* 链接容器样式 */
        .link-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        .link-container a {
            color: #999;
            text-decoration: none;
            font-size: 14px;
            margin: 0 10px;
        }

        .link-container a:hover {
            color: #666;
        }

        .copy-success {
            position: absolute;
            top: -35px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #28a745;
            color: #fff;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
    </style>
</head>
<body>
<div class="subscription-container">
    <h1>您的订阅信息</h1>

    <!-- 剩余天数显示 -->
    <div class="remaining-days">
        有效期剩余：<strong>{{ remaining_days }} 天</strong>
    </div>

    <!-- 订阅链接和复制按钮 -->
    <div class="subscription-link">
        <a href="{{ subscription_url }}" target="_blank">{{ subscription_url }}</a>
        <button onclick="copyToClipboard('{{ subscription_url }}')">复制链接</button>
        <!-- 复制成功提示 -->
        <div id="copySuccess" class="copy-success">复制成功</div>
    </div>

    <!-- 二维码显示 -->
    <div class="qr-code">
        <img src="{{ url_for('static', filename='qrcodes/' + user.subscription_link + '.png') }}" alt="订阅二维码">
        <!-- 添加二维码标签 -->
        <div class="qr-code-label">Shadowrocket订阅码</div>
    </div>

    <!-- 退出登录和购买页面链接 -->
    <div class="link-container">
        <a href="{{ url_for('logout') }}" class="logout-link">退出登录</a>
        <a href="purchase" class="purchase-link">购买页面</a>
    </div>
</div>

<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            // 显示“复制成功”提示
            const copySuccess = document.getElementById("copySuccess");
            copySuccess.style.opacity = "1";
            copySuccess.style.visibility = "visible";

            // 2秒后隐藏提示
            setTimeout(() => {
                copySuccess.style.opacity = "0";
                copySuccess.style.visibility = "hidden";
            }, 2000);
        }).catch(err => {
            console.error("复制失败:", err);
        });
    }
</script>
</body>
</html>

subscription.css:
/* subscription.css */

/* 复制成功提示样式 */
.copy-success {
    position: absolute;
    top: -30px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #28a745;
    color: #fff;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 12px;
    font-weight: bold;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    white-space: nowrap;
}

/* 链接容器样式 */
.link-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
}

.link-container a {
    color: #999;
    text-decoration: none;
    font-size: 14px;
    margin: 0 10px;
}

.link-container a:hover {
    color: #666;
}

base.css:
/* base.css */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
}

body {
    background-color: #f5f5f7;
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    line-height: 1.6;
}

.container {
    width: 100%;
    max-width: 800px;
    padding: 20px;
    background-color: #ffffff;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

h1 {
    font-size: 28px;
    margin-bottom: 24px;
    color: #1d1d1f;
    font-weight: 600;
    text-align: center;
}

button {
    padding: 12px;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    color: #fff;
    background: linear-gradient(135deg, #007aff, #0a84ff);
    cursor: pointer;
    transition: background 0.3s ease;
    margin: 8px 0;
}

button:hover {
    background: linear-gradient(135deg, #0a84ff, #0d88ff);
}

